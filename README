cq is a simple command-queueing daemon. It executes a series of commands (jobs)
in order in the background. This by itself is unremarkable, but cq puts some
sugar on top of this to make common tasks easy. In particular, it:

- Allows adding and removing jobs from the queue on-the-fly.

- Allows editing of the order of queued jobs without halting execution of the
  current job.

- Allows editing of queued jobs on-the-fly, without halting execution of the job
  queue as a whole, and without risk of starting a job which is currently being
  edited.

- Runs each job in a separate GNU screen instance, so you can easily view the
  job's output and interact with it.

- Has convenient commands for viewing the job queue.

At the moment, cq is *very* incomplete. It also has some overly-specific
requirements (zsh, and various GNU/Linux-specific features). Feel free to send
me patches or even fork the project. I make no promises regarding when these
bugs will be fixed or with regards to timeliness of response to patch
submissions.


Usage
=====

This should really be a man page, but I'm a lazy fuck.

Cq is invoked as `cq CQ-OPTIONS CMD CMD-OPTIONS ARGS`. `CQ-OPTIONS` are options
common to all cq commands. CMD is a cq subcommand. CMD-OPTIONS are options
specific to this command, and ARGS are its arguments (if it takes any).

## Global options

  -d DIR

    Tells cq to use DIR as its control directory. Otherwise, cq defaults to the
    value of the environment variable CQDIR.


## Commands

    cq create [CQDIR]

Creates a new cq instance in CQDIR, which defaults to the value of CQDIR
environment variable, or to a temporary directory if that is unset. Outputs sh
commands to set the appropriate environment variables, so that future cq
invocations will use this cq instance; intended to be used with `eval`, as in
`eval $(cq create)`.


    cq destroy [CQDIR]

Destroys the cq instance in CQDIR.


    cq start

Starts the cq daemon, cqd, which runs jobs in the job queue.


    cq stop

Stops the cq daemon (and hence stops the execution of jobs from the queue).


    cq add [-e] [-n JOBID] [COMMAND [ARG ...]]
    cq a ...

Adds a new job to the end of the queue. The job is named JOBID, which defaults
to the lowest natural number not in use. The job will by default be a shell
script which runs `COMMAND ARGS ...`. If the -e option is supplied, the user is
given a chance to edit the job before it is enqueued.


    cq remove JOBID
    cq r ...

Removes JOBID from the job queue.


    cq edit JOBID
    cq e ...

Opens the job specified by JOBID in an editor. Currently unimplemented.


    cq edit-queue
    cq eq

Opens the job queue in an editor.


    cq status
    cq s

Shows the current value of CQDIR, whether the cq daemon is running and its pid
if it is, and the current job if one exists.


    cq list
    cq l

Lists the jobs in the queue (and those not in the queue if such exist, though
they really shouldn't, except during atomic queue modifications).


    cq view
    cq v

Attaches to the screen of the currently-running job.
