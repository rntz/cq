#!/bin/zsh

integer queuefd

# Utility functions
die() { echo $@ >&2; exit 1 }

init() {
    # Determine the control directory.
    [ -n $CQDIR ] || die 'No CQDIR specified'
    [ -d $CQDIR ] || die 'CQDIR is not a directory'
    [ -x $CQDIR ] || die 'CQDIR not searchable'
    [ -w $CQDIR ] || die 'CQDIR not writable'

    # Open the queue file
    exec -- {queuefd}>>$CQDIR/queue
}

cqdpid() { cat $CQDIR/cqd.pid }

lock() { flock -x $queuefd }
unlock() { flock -u $queuefd }

notify-cqd() {
    local pid=$(cqdpid)
    if [ -n $pid ]; then
        echo "notifying cqd"
        kill -USR1 $pid
    fi
}

enqueue() {
    echo $@ >> $CQDIR/queue
    notify-cqd
}

newjobid() {
    # XXX: this really should only be locking the jobs directory, or some other
    # lockfile, but I can't find a way to flock a directory in shell.
    lock
    comm -13 <(ls $CQDIR/jobs | sort -n) \
             <(for ((i=0; ; ++i)) echo $i) \
        2>/dev/null | head -1 2>/dev/null
    unlock
}

# Commands
cq-nop() {}

cq-create() {
    # Set up a new control directory.
    CQDIR=${1:-${CQDIR:-$(mktemp -d --tmpdir cq.XXXXXXXXXX)}}
    mkdir -p $CQDIR || die
    echo "export CQDIR='$CQDIR'"
}

cq-run() {
    export CQDIR
    cqd &
    echo $! > $CQDIR/cqd.pid
}

cq-halt() {
    pid=$(cqdpid)
    [ -n $pid ] || die "Could not get pid of cqd daemon"
    kill $pid || die "Could not kill cqd daemon"
    rm $CQDIR/cqd.pid
}

cq-edit-queue() {
    lock

    tmpfile=$(mktemp)
    cp $CQDIR/queue $tmpfile

    if $EDITOR $tmpfile; then
        cp $tmpfile $CQDIR/queue
        notify-cqd
    else
        echo "editor failed, not modifying queue" >&2
        failed=1
    fi

    unlock

    echo removing temp file
    rm $tmpfile

    return ${failed:-0}
}

cq-add() {
    mkdir -p $CQDIR/jobs || die "cannot make job directory"
    jobid=$(newjobid)
    jobdir=$CQDIR/jobs/$jobid
    mkdir $jobdir || die "job already exists: $jobid"

    # XXX: should be locking job directory, not entire queue!
    lock

    # Create job
    cat >$jobdir/run <<EOF
#!/bin/sh
$@
EOF
    (( $? )) && die "failed to create job runfile"
    chmod +x $jobdir/run || die "cannot make job runfile executable"

    # Add to queue
    enqueue $jobid

    # Done.
    unlock
}


# Determine command & global options and run command
while getopts 'd:' option ${@}; do
    case $option in
        d) CQDIR=$OPTARG;;
        *) echo "Unrecognized option flag ${option}"; exit 1;;
    esac
    set -- ${@[$OPTIND,-1]}
done

cmd=$1; shift

case $cmd in
    add|create|edit|edit-queue|halt|list|nop|run)
        # command was fully specified, do nothing
        ;;

    # Aliases go here.
    a) cmd=add;;
    c) cmd=create;;
    e) cmd=edit;;
    eq) cmd=edit-queue;;
    h) cmd=halt;;
    l) cmd=list;;
    r) cmd=run;;

    *) echo "unrecognized command: $cmd"; exit 1;;
esac

[ $cmd != create ] && init
cq-$cmd $@
