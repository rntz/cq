#!/bin/zsh

integer lockfd

# Add our directory to the path.
PATH=$(dirname $(readlink -f $0)):$PATH

# Utility functions
die() { echo $@ >&2; exit 1 }

init() {
    # Determine the control directory.
    [ -n $CQDIR ] || die 'No CQDIR specified'
    [ -d $CQDIR ] || die 'CQDIR is not a directory'
    [ -x $CQDIR ] || die 'CQDIR not searchable'
    [ -w $CQDIR ] || die 'CQDIR not writable'

    # Open the queue file
    exec {lockfd}>$CQDIR/.lock
}

cqdpid() { cat $CQDIR/cqd.pid 2>/dev/null }

lock() { flock -x $lockfd }
unlock() { flock -u $lockfd }

notify-cqd() {
    local pid=$(cqdpid)
    if [ -n "$pid" ]; then
        echo "notifying cqd (pid $pid)"
        kill -USR1 $pid
    else
        echo "cqd not running"
    fi
}

newjobid() {
    comm -13 <(ls $CQDIR/jobs | egrep '^[0-9]+$' | sort -n) \
             <(for ((i=0; ; ++i)) echo $i) \
        2>/dev/null | head -1 2>/dev/null
}

jobdesc() {
    local jobid=$1
    local jobdir=$CQDIR/jobs/$jobid
    local jobfd
    exec {jobfd}>$jobdir/.lock
    flock -x $jobfd

    local desc="${jobid}\t$(head -n 2 $jobdir/run | tail -n 1)"
    (( $(wc -l < ${jobdir}/run) > 2)) && desc+='...'
    echo $desc

    # not sure unlocking is necessary, since we're closing the fd anyway
    flock -u $jobfd
    exec {jobfd}>&-
}

jobdescs() { while read jobid; do jobdesc $jobid; done }

# Commands
cq-nop() {}

cq-create() {
    # Set up a new control directory.
    CQDIR=${1:-${CQDIR:-$(mktemp -d --tmpdir cq.XXXXXXXXXX)}}
    mkdir -p $CQDIR || die
    echo "export CQDIR='$CQDIR'"
}

cq-hup() {
    notify-cqd
}

cq-start() {
    export CQDIR
    cqd &
    echo $! > $CQDIR/cqd.pid
}

cq-stop() {
    local pid=$(cqdpid)
    [ -n "$pid" ] && die "Could not get pid of cqd daemon"
    kill $pid || die "Could not kill cqd daemon"
    rm $CQDIR/cqd.pid
}

cq-list() {
    local qtmp=$(mktemp)
    local jtmp=$(mktemp)

    # Lock job directory
    exec {jobdirfd}>$CQDIR/jobs/.lock
    flock -x $jobdirfd

    # Copy the queue file
    lock
    cat $CQDIR/queue > $qtmp
    unlock

    # Determine which jobs aren't in the queue file
    comm -23 <(ls $CQDIR/jobs | sort -n) <(sort -n $qtmp) > $jtmp

    # TODO: some way of determining what the current job is.
    {
        echo 'JOBID\tDESCRIPTION'
        # Jobs in the queue.
        cat $qtmp | jobdescs
        # Jobs not in the queue, if any exist.
        [ -s $jtmp ] && { echo '--'; cat $jtmp | jobdescs }
    } | column -s $'\t' -t

    flock -u $jobdirfd
    unlock

    rm $qtmp $jtmp
}

cq-edit-queue() {
    tmpfile=$(mktemp)

    lock

    cp $CQDIR/queue $tmpfile

    if $EDITOR $tmpfile; then
        cp $tmpfile $CQDIR/queue
        notify-cqd
    else
        echo "editor failed, not modifying queue" >&2
        failed=1
    fi

    unlock

    rm $tmpfile
    return ${failed:-0}
}

cq-add() {
    # Make sure that our job directory exists.
    mkdir -p $CQDIR/jobs || die "cannot make job directory"

    # Parse options.
    while getopts 'en:' option ${@}; do
        case $option in
            e) edit=true;;
            n) jobid=$OPTARG;;
            *) die "Unrecognized cq-add option: ${option}";;
        esac
    done
    set -- ${@[$OPTIND,-1]}

    # Lock the jobs directory
    exec {joblockfd}>$CQDIR/jobs/.lock
    flock -x $joblockfd

    [ -z $jobid ] && jobid=$(newjobid)
    jobdir=$CQDIR/jobs/$jobid
    mkdir $jobdir 2>/dev/null || die "job already exists: $jobid"

    # Unlock jobs directory & lock our job's directory.
    flock -u $joblockfd
    exec {joblockfd}>&-
    exec {joblockfd}>$jobdir/.lock
    flock -x $joblockfd

    # Create job
    runfile=$jobdir/run
    cat >$runfile <<EOF
#!/bin/sh
$@
EOF
    (( $? )) && die "failed to create job runfile"
    chmod +x $runfile || die "cannot make job runfile executable"

    # Edit the job if the user requested it.
    if [ -n "$edit" ] && ! $EDITOR $runfile; then
        echo "editor failed, not adding job $jobid" >&2
        rm -r $jobdir || echo "could not remove job directory for $jobid" >&2
        exit 1
    fi

    # Unlock job's directory.
    flock -u $joblockfd
    exec {joblockfd}>&-

    # Add to queue.
    lock
    echo $jobid >> $CQDIR/queue
    notify-cqd
    unlock
}


# Determine command & global options and run command
while getopts 'd:' option ${@}; do
    case $option in
        d) CQDIR=$OPTARG;;
        *) die "Unrecognized option: ${option}";;
    esac
    set -- ${@[$OPTIND,-1]}
done

cmd=$1; shift

case $cmd in
    add|create|edit|edit-queue|hup|list|run|start|stop)
        # command was fully specified, do nothing
        ;;

    # Aliases go here.
    a) cmd=add;;
    c) cmd=create;;
    e) cmd=edit;;
    eq) cmd=edit-queue;;
    l) cmd=list;;

    *) echo "unrecognized command: $cmd"; exit 1;;
esac

[ $cmd != create ] && init
cq-$cmd $@
