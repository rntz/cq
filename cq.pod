=pod

=head1 NAME

cq - command queue

=head1 SYNOPSIS

B<cq> [B<-d> F<DIR>] I<COMMAND> [I<ARGS>]


=head1 DESCRIPTION

cq is a simple command-queueing daemon and frontend. It runs a series of
commands (jobs) in order in the background. It allows safe interactive editing
and viewing of the job queue and editing of jobs without unnecessarily
interrupting job execution.

=head2 Overview

cq is split into two parts: the B<cq> script, documented here, and B<cqd>, the
command queue daemon. The user never has to deal with cqd directly; the cq
fronted handles all interaction.

cq operates within an B<instance>. An instance is identified by its instance
directory, usually referred to as I<CQDIR>, where its state is kept. There can
be at most one copy of cqd running per instance.

When running, cqd executes a series of B<jobs>. Each job is an executable file,
usually a shell script, provided by the user. Jobs are placed on a B<queue> and
executed in FIFO order. cqd takes a job off the top of the queue, makes it the
B<current> job, executes it, destroys it, and repeats. If the queue is empty,
cqd waits until a new job appears.

cqd executes jobs using screen(1), allowing the user to interact with and view
their output. (At present, this use of screen is hardcoded; in the future, this
may be generalized to allow arbitrary wrappers.)

The queue may be edited on-the-fly by the user. While the queue is being edited,
cqd will not remove jobs from it; it will wait until the user is done editing,
then remove and run the next job. Similarly, jobs still on the queue may be
edited by the user. If a job that would be made current is being edited, cqd
will wait until the user finishes before running it.


=head1 OPTIONS

=over

=item B<-d> F<DIR>

Use F<DIR> as the instance directory. Defaults to the value of the environment
variable I<CQDIR>.

=back


=head1 CQ COMMANDS

=over


=item B<cq create> [F<CQDIR>]

Makes F<DIR> an instance directory. If it already is, does nothing. F<DIR>
defaults to I<CQDIR>; if neither is specified, a temporary directory is used.
Outputs sh(1) commands to set the I<CQDIR> environment variable, so that future
cq invocations will use this cq instance; intended to be used with eval(1), as
in C<eval $(cq create)>.


=item B<cq destroy> [F<CQDIR>]

Destroys the cq instance in F<CQDIR>.


=item B<cq start>

Starts the cq daemon, cqd, which runs jobs in the job queue.


=item B<cq stop> [B<-f>]

Stops the cq daemon, and hence stops the execution of jobs from the queue. If
there is a job running, the daemon will complete it before exiting. To stop
immediately, terminating the current job, pass the B<-f> flag.


=item B<cq> B<a>[B<dd>] [B<-e>] [B<-n> I<JOBID>] [I<COMMAND> [I<ARG>]...]

Adds a new job to the end of the queue. The job is named I<JOBID>, which
defaults to the least unused natural number. The job will by default be a shell
script which runs C<COMMAND ARG...>. If the B<-e> flag is supplied, the user is
given a chance to edit the job before it is enqueued.


=item B<cq> B<r>[B<emove>] I<JOBID>

Removes I<JOBID> from the job queue.


=item B<cq> B<e>[B<dit>] I<JOBID>

Opens the job specified by I<JOBID> for editing.


=item B<cq eq>

=item B<cq edit-queue>

Opens the job queue for editing.


=item B<cq> B<s>[B<tatus>]

Shows the current value of I<CQDIR>, whether cqd is running and its pid if it
is, and the current job if it exists.


=item B<cq> B<l>[B<ist>]

Lists the jobs in the queue (and those not in the queue if such exist, though
they really shouldn't, except during atomic queue modifications).


=item B<cq> B<v>[B<iew>]

Attaches to the screen of the currently-running job.


=item B<cq hup>

Explicitly tell cqd to rescan the queue. (Unnecessary under normal circumstances.)


=back


=head1 ENVIRONMENT VARIABLES

=over

=item I<CQDIR>

The default instance directory. This is where cq stores job files, the job
queue, lock files, and the other state it maintains.

=item I<EDITOR>

The user's editor, invoked when editing of a job or of the job queue etc. is
requested.

=back


=head1 BUGS

At the moment, cq is B<very> incomplete. It also has some overly-specific
requirements (in particular the Z shell, zsh(1)). Feel free to send patches. I
make no promises regarding when these bugs will be fixed or with regards to
timeliness of response to patch submissions.


=head1 AUTHOR

Michael Arntzenius <daekharel@gmail.com>

=cut
